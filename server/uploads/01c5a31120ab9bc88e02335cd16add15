# Queue

After reading this chapter and engaging in the embedded activities and reflections, you should be able to:

* Explain and trace the **core operations of Queue** (enqueue, dequeue, front, empty).
* Describe the difference between `enqueue` and `dequeue`.
* Implement the core operations of Queue efficiently (array based and linked base).
* Explain why an efficient linked implementation of Queue requires a **tail** pointer.  
* Explain why an efficient array based implementation of Queue can logically be viewed as a **circular data structure**.
* Define *Steque*, *Quack*, and **Deque** ADT.

> [Starter code](../../zip/chap13-starter.zip) for this chapter

<details class="solution" data-release="Feb 24, 2023 17:00:00">
<summary>Solution code</summary>

[Solution code](../../zip/chap13-solution.zip) for this chapter.

</details>